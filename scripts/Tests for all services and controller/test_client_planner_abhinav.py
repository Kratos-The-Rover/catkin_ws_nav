#!/usr/bin/env python

import sys
import rospy
from navigation.srv import *
from navigation.msg import *
import numpy as np
import os
from std_msgs.msg import String
from sensor_msgs.msg import LaserScan

# from context import RRT, utils
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../rrt_for_scan')))
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../rrt_star')))
from utils_scan import scan_obstacle_checker, make_obstacles_scan, check_intersection_scan
from utils_scan import adjustable_random_sampler as sampler
from descartes import PolygonPatch
from shapely.geometry import Polygon, Point, LineString
import random
import math, time
import matplotlib.pyplot as plt

sys.path.append(os.path.dirname(os.path.abspath(__file__)) +
                "/../rrt_for_scan/")
sys.path.append(os.path.dirname(os.path.abspath(__file__)) +
                "/../rrt_star/")



try:
    from rrt import RRT
    #from rrt_star_scan1 import RRTSTar
except ImportError:
    raise

show_animation = True

start_time = 0
show_animation=True
def rrt_client(x, y,z):
    print("Starting rrt_client")
    rospy.wait_for_service('rrt_planner')
    try:
        rrt = rospy.ServiceProxy('rrt_planner', Planner)
        print("Proxy created")
        resp1 = rrt(x, y, z)
        print(resp1)
        return resp1.path
    except rospy.ServiceException, e:
        print "Service call failed: %s"%e

def usage():
    return "%s [x y]"%sys.argv[0]

if __name__ == "__main__":
    inf=100
    nan=1000
    scan_list =[2.41854190826416, 2.4221341609954834, 2.423945188522339, 2.4257662296295166, 2.4275975227355957, 2.4312901496887207, 2.433152198791504, 2.4350244998931885, 2.4369068145751953, 2.438800096511841, 2.4407033920288086, 2.444542407989502, 2.4464776515960693, 2.4484236240386963, 2.450380563735962, 2.452348470687866, 2.4563167095184326, 2.458317279815674, 2.460329294204712, 2.4623522758483887, 2.464386463165283, 2.4664320945739746, 2.470557451248169, 2.47263765335083, 2.47472882270813, 2.4768316745758057, 2.4789469242095947, 2.4810733795166016, 2.4832117557525635, 2.4875242710113525, 2.4896984100341797, 2.49188494682312, 2.4940836429595947, 2.4962942600250244, 2.4985175132751465, 2.5007529258728027, 2.5052616596221924, 2.5075347423553467, 2.5098206996917725, 2.5121190547943115, 2.514430522918701, 2.5167548656463623, 2.519092082977295, 2.521442413330078, 2.5261826515197754, 2.5285725593566895, 2.530975818634033, 2.5333926677703857, 2.535822868347168, 2.538266897201538, 2.540724039077759, 2.5431954860687256, 2.545680522918701, 2.5506927967071533, 2.5532195568084717, 2.5557610988616943, 2.558316469192505, 2.5608861446380615, 2.5634706020355225, 2.5660691261291504, 2.5686821937561035, 2.571310520172119, 2.573953151702881, 2.5792832374572754, 2.581970691680908, 2.5846734046936035, 2.5873911380767822, 2.5901241302490234, 2.5928728580474854, 2.5956368446350098, 2.598416566848755, 2.6012117862701416, 2.60402250289917, 2.606849431991577, 2.609692096710205, 2.612550735473633, 2.618316650390625, 2.6212239265441895, 2.624147891998291, 2.6270880699157715, 2.630045175552368, 2.633018970489502, 2.636009454727173, 2.63901686668396, 2.6420412063598633, 2.645082712173462, 2.648141384124756, 2.651217460632324, 2.654310941696167, 2.6574220657348633, 2.660550832748413, 2.6636972427368164, 2.6668615341186523, 2.670044183731079, 2.6732442378997803, 2.6796998977661133, 2.682955265045166, 2.6862289905548096, 2.689521312713623, 2.6928327083587646, 2.6961629390716553, 2.699511766433716, 2.7028801441192627, 2.7062675952911377, 2.709674119949341, 2.7131004333496094, 2.716545820236206, 2.7200117111206055, 2.723496437072754, 2.727001667022705, 2.73052716255188, 2.73407244682312, 2.737638235092163, 2.7412242889404297, 2.7448313236236572, 2.7484583854675293, 2.7521066665649414, 2.7557761669158936, 2.7594664096832275, 2.7631781101226807, 2.7669107913970947, 2.770664930343628, 2.7744410037994385, 2.7782387733459473, 2.7820582389831543, 2.7858998775482178, 2.789763927459717, 2.793649673461914, 2.797558546066284, 2.8014893531799316, 2.805443286895752, 2.809420108795166, 2.813419818878174, 2.8174426555633545, 2.821489095687866, 2.825558662414551, 2.8296520709991455, 2.8337690830230713, 2.8379099369049072, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, 1.829384684562683, 1.812658429145813, 1.796244740486145, 1.7801347970962524, 1.764320731163025, nan, 1.7487945556640625, 1.7335485219955444, 1.718575358390808, 1.7038679122924805, 1.6894192695617676, 1.6752228736877441, 1.6612720489501953, 1.6475610733032227, 1.6340835094451904, 1.6208339929580688, nan, 1.6078065633773804, 1.5949959754943848, 1.5823969841003418, 1.5700043439865112, 1.557813286781311, 1.5458191633224487, 1.534017562866211, 1.5224038362503052, 1.5109732151031494, 1.499721884727478, 1.4886457920074463, nan, 1.47774076461792, 1.4670031070709229, 1.4564288854599, 1.4460148811340332, 1.4357572793960571, 1.4256527423858643, 1.4156980514526367, 1.405889868736267, 1.396225094795227, 1.3867008686065674, 1.3773140907287598, 1.368061900138855, nan, 1.3589415550231934, 1.3499501943588257, 1.341085433959961, 1.332344651222229, 1.3237252235412598, 1.3152247667312622, 1.3068408966064453, 1.2985714673995972, 1.2904138565063477, 1.282366394996643, 1.2744265794754028, 1.2665923833847046, nan, 1.2588618993759155, 1.2512332201004028, 1.2437043190002441, 1.2362730503082275, 1.228938102722168, 1.2216973304748535, 1.21454918384552, 1.2074919939041138, 1.2005239725112915, 1.19364333152771, 1.1868488788604736, 1.1801388263702393, 1.1735117435455322, 1.166966199874878, nan, 1.1605008840560913, 1.154114007949829, 1.1478044986724854, 1.141571044921875, 1.1354122161865234, 1.1293268203735352, 1.123313546180725, 1.1173710823059082, 1.111498475074768, 1.1056944131851196, 1.099957823753357, 1.0942875146865845, 1.0886825323104858, 1.083141565322876, 1.0776636600494385, nan, 1.0722479820251465, 1.0668933391571045, 1.0615988969802856, 1.056363582611084, 1.0511865615844727, 1.0460667610168457, 1.0410033464431763, 1.0359954833984375, 1.0310423374176025, 1.026142954826355, 1.0212966203689575, 1.0165023803710938, 1.011759638786316, 1.0070674419403076, 1.002425193786621, 0.9978319406509399, 0.9932871460914612, 0.988789975643158, 0.984339714050293, nan, 0.9799357652664185, 0.9755774140357971, 0.9712639451026917, 0.9669947028160095, 0.9627691507339478, 0.9585866332054138, 0.9544464349746704, 0.9503480792045593, 0.946290910243988, 0.9422743320465088, 0.9382978081703186, 0.9343607425689697, 0.9304627180099487, 0.9266029596328735, 0.9227811098098755, 0.9189966320991516, 0.9152489900588989, 0.9115376472473145, 0.9078621864318848, 0.9042220711708069, 0.9006168246269226, 0.8970460295677185, 0.8935091495513916, 0.8900058269500732, 0.8865355253219604, 0.8830979466438293, 0.8796924948692322, 0.8763188719749451, 0.872976541519165, 0.8729147911071777, 0.8735573887825012, 0.8742027282714844, 0.8748508095741272, 0.8755016326904297, 0.8761552572250366, 0.8768115043640137, 0.8774704933166504, 0.8781322836875916, nan, 0.8787967562675476, 0.8794639706611633, 0.8801339864730835, 0.8808066844940186, 0.8814820647239685, 0.8821603059768677, 0.882841169834137, 0.8835247159004211, 0.8842110633850098, 0.8849000334739685, 0.8855918049812317, 0.886286199092865, 0.886983335018158, 0.8876831531524658, 0.8883857131004333, 0.8890909552574158, 0.8897988796234131, 0.8912228941917419, 0.8919389247894287, 0.8926576972007751, 0.8933792114257812, 0.8941033482551575, 0.8948302268981934, 0.8955597877502441, 0.8962920308113098, 0.8970269560813904, 0.8977646231651306, 0.898504912853241, 0.8992478847503662, 0.8999935388565063, 0.9007419347763062, 0.9014930129051208, 0.9022467136383057, 0.9030030965805054, 0.9037621021270752, 0.9045238494873047, 0.9052882194519043, 0.9060553312301636, 0.906825065612793, 0.9075974225997925, 0.9083723425865173, 0.9091500043869019, 0.9099302887916565, 0.9107131958007812, 0.9114988446235657, 0.9122870564460754, 0.9130778908729553, 0.9138714075088501, 0.9146676063537598, 0.9154664278030396, 0.9162678718566895, 0.9178786873817444, 0.9186879992485046, 0.9194999933242798, 0.920314610004425, 0.9211318492889404, 0.9219516515731812, 0.9227741360664368, 0.9235991835594177, 0.9244269132614136, 0.9252572059631348, 0.9260901808738708, 0.9269256591796875, 0.927763819694519, 0.9286045432090759, 0.9294478893280029, 0.9302938580513, 0.9319935441017151, 0.9328472018241882, 0.9337035417556763, 0.9345624446868896, 0.9354239106178284, 0.9362879991531372, 0.9371546506881714, 0.9380239248275757, 0.9388957619667053, 0.9397702217102051, 0.9406471848487854, 0.9415267705917358, 0.9432936906814575, 0.944180965423584, 0.9450708031654358, 0.9459631443023682, 0.9468581080436707, 0.9477555751800537, 0.9486556649208069, 0.9495582580566406, 0.9504633545875549, 0.9513711333274841, 0.9531940817832947, 0.9541094303131104, 0.9550272822380066, 0.9559476375579834, 0.9568704962730408, 0.9577959775924683, 0.9587239623069763, 0.9596543908119202, 0.9615229368209839, 0.962460994720459, 0.9634014964103699, 0.9643446207046509, 0.9652901887893677, 0.9662383198738098, 0.9671888947486877, 0.968142032623291, 0.9700556993484497, 0.9710163474082947, 0.9719794392585754, 0.972944974899292, 0.9739131331443787, 0.9748836755752563, 0.9758566617965698, 0.9778102040290833, 0.9787906408309937, 0.9797735810279846, 0.9807590246200562, 0.9817469716072083, 0.9827373027801514, 0.9847254157066345, 0.9857232570648193, 0.9867234230041504, 0.9877261519432068, 0.9887312650680542, 0.9897388815879822, 0.991761326789856, 0.9927762150764465, 0.9937936067581177, 0.9948133230209351, 0.995835542678833, 0.9978872537612915, 0.998916745185852, 0.9999486804008484, 1.0009829998016357, 1.0020197629928589, 1.003058910369873, 1.005144476890564, 1.0061907768249512, 1.007239580154419, 1.0082907676696777, 1.009344458580017]
    x = Point_xy([-0.0738900774137,-0.899329953735])
    y = Point_xy([5,-5])
   
    #print "Requesting %s+%s"%(x, y)
    path =rrt_client(x,y,scan_list)
    if path is None:
        print("Cannot find path")
    else:
        print("found path!!")
        print(path)
    
       # final_path = path

        
